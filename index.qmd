---
title: "How To Script with OVITO"
subtitle: "A series of recipes and tutorials on how to use python scripting with OVITO"
---

## About

[OVITO](https://ovito.org) is a visualization software for computational chemistry and materials science [@Stukowski2009]. Its primarily used through a graphical user interface (GUI), but it has a standalone python scripting library that allows for full fledge use of all OVITO capabilities^[No need for **Pro** subscription]. Its very powerful approach that enables manipulation of atomic simulation data to create beautiful visualizations.

This site is a rendering from a collection of Google Colab/Jupyter notebooks that show reciepes for how to perform visualization and data analysis using scripting OVITO (SOVITO^[I will use the acronym **SOVITO** regularly]).

## Installing OVITO python scripting

You don't need to install the GUI version of OVITO to use the code shown on this site. There are two options:

**pip**
```bash
pip install -U ovito
```

**Conda**
```bash
conda install --strict-channel-priority -c https://conda.ovito.org -c conda-forge ovito=3
```

:::::: {.callout-note}
Most of the notebooks inlcude cell magic escapes to `pip` install OVITO.
:::

## Notes on Rendering

OVITO has the following options for rendering images:

1. [OpenGL](https://www.ovito.org/manual/python/modules/ovito_vis.html#ovito.vis.OpenGLRenderer)
2. [Tachyon](https://www.ovito.org/manual/python/modules/ovito_vis.html#ovito.vis.TachyonRenderer)
3. [OSPRay](https://www.ovito.org/manual/python/modules/ovito_vis.html#ovito.vis.OSPRayRenderer)
4. [Anari^[This is an experimental renderer and I had trouble getting it to work] (CUDA GPU)](https://www.ovito.org/manual/python/modules/ovito_vis.html#ovito.vis.AnariRenderer)

Both 1 and 4 are hardware based while 2-3 are software ray tracing programs. For quick rendered images, I find that 1 is the best, however since I'm running the notebooks on Google Colab or JupyterLab in a headless configuration I couldn't get OpenGL to work so I used 2 or 3. 

In general, the choice of render is based on need for speed and preference for the stylistic aspects of redendering atomistic simulations. There is no "best" choice for everyone, just use what you like. Therefore in the notebooks just change the render to what you would prefer.

::: {.callout-tip}
The developer(s) of OVITO really try to provide very modern tools for visualization. This [includes](https://www.ovito.org/docs/dev/reference/file_formats/output/gltf.html) the ability to use [glTF](https://en.wikipedia.org/wiki/GlTF), which is a web standard for displaying 3D models. This means you can display your simulation cell with analysis colorings and make them maninuplateable.
:::

<iframe src="resources/C60-FCC-Pillar/index.html"></iframe>


## Notebooks

Most of the notebooks have been drafted using [Google Colab](https://colab.research.google.com/) which is a custom version of Jupyter notebooks. The notebooks are then rendered with [Quarto](https://quarto.org/) to produce this website. This makes it so the reader can either copy code snippets in whatever python setup they prefer. Could be VSCode, JupyterLab, Google Colab, etc.