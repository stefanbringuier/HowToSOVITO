[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "How To Script with OVITO",
    "section": "",
    "text": "OVITO is a visualization software for computational chemistry and materials science (Stukowski 2009). Its primarily used through a graphical user interface (GUI), but it has a standalone python scripting library that allows for full fledge use of all OVITO capabilities1. Its very powerful approach that enables manipulation of atomic simulation data to create beautiful visualizations.\n1 No need for Pro subscription2 I will use the acronym SOVITO regularlyThis site is a rendering from a collection of Google Colab/Jupyter notebooks that show reciepes for how to perform visualization and data analysis using scripting OVITO (SOVITO2).",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "How To Script with OVITO",
    "section": "",
    "text": "OVITO is a visualization software for computational chemistry and materials science (Stukowski 2009). Its primarily used through a graphical user interface (GUI), but it has a standalone python scripting library that allows for full fledge use of all OVITO capabilities1. Its very powerful approach that enables manipulation of atomic simulation data to create beautiful visualizations.\n1 No need for Pro subscription2 I will use the acronym SOVITO regularlyThis site is a rendering from a collection of Google Colab/Jupyter notebooks that show reciepes for how to perform visualization and data analysis using scripting OVITO (SOVITO2).",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "index.html#installing-ovito-python-scripting",
    "href": "index.html#installing-ovito-python-scripting",
    "title": "How To Script with OVITO",
    "section": "Installing OVITO python scripting",
    "text": "Installing OVITO python scripting\nYou don’t need to install the GUI version of OVITO to use the code shown on this site. There are two options:\npip\npip install -U ovito\nConda\nconda install --strict-channel-priority -c https://conda.ovito.org -c conda-forge ovito=3\n\n\n\n\n\n\nNote\n\n\n\nMost of the notebooks inlcude cell magic escapes to pip install OVITO.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "index.html#notes-on-rendering",
    "href": "index.html#notes-on-rendering",
    "title": "How To Script with OVITO",
    "section": "Notes on Rendering",
    "text": "Notes on Rendering\nOVITO has the following options for rendering images:\n\nOpenGL\nTachyon\nOSPRay\nAnari3 (CUDA GPU)\n\n3 This is an experimental renderer and I had trouble getting it to workBoth 1 and 4 are hardware based while 2-3 are software ray tracing programs. For quick rendered images, I find that 1 is the best, however since I’m running the notebooks on Google Colab or JupyterLab in a headless configuration I couldn’t get OpenGL to work so I used 2 or 3.\nIn general, the choice of render is based on need for speed and preference for the stylistic aspects of redendering atomistic simulations. There is no “best” choice for everyone, just use what you like. Therefore in the notebooks just change the render to what you would prefer.\n\n\n\n\n\n\nTip\n\n\n\nThe developer(s) of OVITO really try to provide very modern tools for visualization. This includes the ability to use glTF, which is a web standard for displaying 3D models. This means you can display your simulation cell with analysis colorings and make them maninuplateable.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "index.html#notebooks",
    "href": "index.html#notebooks",
    "title": "How To Script with OVITO",
    "section": "Notebooks",
    "text": "Notebooks\nMost of the notebooks have been drafted using Google Colab which is a custom version of Jupyter notebooks. The notebooks are then rendered with Quarto to produce this website. This makes it so the reader can either copy code snippets in whatever python setup they prefer. Could be VSCode, JupyterLab, Google Colab, etc.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "notebooks/HowToSOVITO_Recipe1.html",
    "href": "notebooks/HowToSOVITO_Recipe1.html",
    "title": "Recipe 1: Simple import and visualization",
    "section": "",
    "text": "%%capture\n! pip install -U ovito",
    "crumbs": [
      "Recipe 1: Simple import and visualization"
    ]
  },
  {
    "objectID": "notebooks/HowToSOVITO_Recipe1.html#optional-save-a-3d-model",
    "href": "notebooks/HowToSOVITO_Recipe1.html#optional-save-a-3d-model",
    "title": "Recipe 1: Simple import and visualization",
    "section": "Optional: Save a 3D Model",
    "text": "Optional: Save a 3D Model\nA nice feature is we can save a 3D model representation of our frame/viewport and then manipulate it in real-time in a browser or powerpoint.\n\nexport_file(pipeline,file=\"FCC-C60-Pillar.glb\",format=\"gltf\")",
    "crumbs": [
      "Recipe 1: Simple import and visualization"
    ]
  }
]